openapi: 3.0.3
info:
  title: Tooth Fairy
  description: Tooth Fairy Rest APIs documentation
  version: 1.0.0
servers:
  - url: 'http://localhost:3000/'
    description: Local Development server
tags:
  - name: common
    description: common API
  - name: auth
    description: auth API
  - name: users
    description: users API
paths:

  /auth/user/signup:
    post:
      summary: User SignUp
      operationId: Signup
      tags:
        - auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userName
                - email
                - password
              properties:
                userName:
                  type: string
                  example: rohit123
                email:
                  type: string
                  description: email address
                  example: xyz@gmail.com
                password:
                  type: string
                  description: enter mobile number with country code
                  example: '123456'
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '409':
          description: Conflict
        '500':
          description: Server Error
  /auth/user/login:
    post:
      summary: User Login
      operationId: login
      tags:
        - auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  description: enter emailid
                  example: xyz@gmail.com
                password:
                  type: string
                  description: enter password
                  example: 123456

      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '409':
          description: Conflict
        '500':
          description: Server Error

  /create-name:
    post:
      summary: create Quizz name
      operationId: Quizz Name
      tags:
        - Quizz
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - quizzName
              properties:
                quizzName:
                  type: string
                  description: enter Quizz Name
                  example: rohit
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '409':
          description: Conflict
        '500':
          description: Server Error  
  
  /create-quizz:
    post:
      summary: create Quizz Content
      operationId: Quizz Content
      tags:
        - Quizz
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - question
                - answer
              properties:
                question:
                  type: string
                  description: Whats your name
                  example: Whats your name
                answer:
                  type: string
                  description: rohit
                  example: rohit
                id:
                  type: number
                  description: id of question
                  example: 1

      security:
        - ApiKeyAuth: []            
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '409':
          description: Conflict
        '500':
          description: Server Error
    
  /questions/{quizzId}:
    patch:
      summary: create Quizz Content
      operationId: Quizz 
      tags:
        - Quizz
      parameters:
        - in: path
          name: quizzId
          schema:
            type: string
          required: true
          description: ID of the quizz
          example: 62905e64f9a0fecd837e4ed6
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - question
                - answer
              properties:
                question:
                  type: string
                  description: Whats your name
                  example: Whats your sirname
                answer:
                  type: string
                  description: gupta
                  example: gupta
                id:
                  type: number
                  description: id of question
                  example: 2

      security:
        - ApiKeyAuth: []            
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '409':
          description: Conflict
        '500':
          description: Server Error

  /quizz/{id}:
    delete:
      summary: create Quizz Content
      operationId:  Delete Quizz
      tags:
        - Quizz
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the quizz
          example: 62905e64f9a0fecd837e4ed6
      security:
        - ApiKeyAuth: []            
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '409':
          description: Conflict
        '500':
          description: Server Error
  
  /quizz:
    get:
      summary: quizz
      operationId: find Quizz
      tags:
        - Quizz
      parameters:
        - in: query
          name: quizzId
          schema:
            type: string
          required: true
          description: quizz id
          example: 62905e64f9a0fecd837e4ed6   
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '409':
          description: Conflict
        '500':
          description: Server Error

   


  
  
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
  schemas:

    
    User:
      properties:
        name:
          type: string
          example: Ravi Roshan
        password:
          type: string
          example: '1234567'
        gender:
          type: string
          example: male
        dob:
          type: number
          example: 1623152805000
        profileImage:
          type: string
          example: default.png
        bgImage:
          type: string
          example: default.png
        address:
          type: string
          example: Jaipur, Rajasthan India
        location:
          type: object
          properties:
            type:
              type: string
              enum:
                - Point
                - Polygon
              example: Point
            coordinates:
              type: array
              items:
                type: integer
                format: int64
              example:
                - -104.9903
                - 39.7392

  

